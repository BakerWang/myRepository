package com.runlion.shop.entity;

import java.util.ArrayList;
import java.util.List;

public class BspProductattributesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public BspProductattributesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRecordidIsNull() {
            addCriterion("recordid is null");
            return (Criteria) this;
        }

        public Criteria andRecordidIsNotNull() {
            addCriterion("recordid is not null");
            return (Criteria) this;
        }

        public Criteria andRecordidEqualTo(Integer value) {
            addCriterion("recordid =", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidNotEqualTo(Integer value) {
            addCriterion("recordid <>", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidGreaterThan(Integer value) {
            addCriterion("recordid >", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("recordid >=", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidLessThan(Integer value) {
            addCriterion("recordid <", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidLessThanOrEqualTo(Integer value) {
            addCriterion("recordid <=", value, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidIn(List<Integer> values) {
            addCriterion("recordid in", values, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidNotIn(List<Integer> values) {
            addCriterion("recordid not in", values, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidBetween(Integer value1, Integer value2) {
            addCriterion("recordid between", value1, value2, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidNotBetween(Integer value1, Integer value2) {
            addCriterion("recordid not between", value1, value2, "recordid");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andAttridIsNull() {
            addCriterion("attrid is null");
            return (Criteria) this;
        }

        public Criteria andAttridIsNotNull() {
            addCriterion("attrid is not null");
            return (Criteria) this;
        }

        public Criteria andAttridEqualTo(Short value) {
            addCriterion("attrid =", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridNotEqualTo(Short value) {
            addCriterion("attrid <>", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridGreaterThan(Short value) {
            addCriterion("attrid >", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridGreaterThanOrEqualTo(Short value) {
            addCriterion("attrid >=", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridLessThan(Short value) {
            addCriterion("attrid <", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridLessThanOrEqualTo(Short value) {
            addCriterion("attrid <=", value, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridIn(List<Short> values) {
            addCriterion("attrid in", values, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridNotIn(List<Short> values) {
            addCriterion("attrid not in", values, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridBetween(Short value1, Short value2) {
            addCriterion("attrid between", value1, value2, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttridNotBetween(Short value1, Short value2) {
            addCriterion("attrid not between", value1, value2, "attrid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidIsNull() {
            addCriterion("attrvalueid is null");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidIsNotNull() {
            addCriterion("attrvalueid is not null");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidEqualTo(Integer value) {
            addCriterion("attrvalueid =", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidNotEqualTo(Integer value) {
            addCriterion("attrvalueid <>", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidGreaterThan(Integer value) {
            addCriterion("attrvalueid >", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidGreaterThanOrEqualTo(Integer value) {
            addCriterion("attrvalueid >=", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidLessThan(Integer value) {
            addCriterion("attrvalueid <", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidLessThanOrEqualTo(Integer value) {
            addCriterion("attrvalueid <=", value, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidIn(List<Integer> values) {
            addCriterion("attrvalueid in", values, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidNotIn(List<Integer> values) {
            addCriterion("attrvalueid not in", values, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidBetween(Integer value1, Integer value2) {
            addCriterion("attrvalueid between", value1, value2, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andAttrvalueidNotBetween(Integer value1, Integer value2) {
            addCriterion("attrvalueid not between", value1, value2, "attrvalueid");
            return (Criteria) this;
        }

        public Criteria andInputvalueIsNull() {
            addCriterion("inputvalue is null");
            return (Criteria) this;
        }

        public Criteria andInputvalueIsNotNull() {
            addCriterion("inputvalue is not null");
            return (Criteria) this;
        }

        public Criteria andInputvalueEqualTo(String value) {
            addCriterion("inputvalue =", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueNotEqualTo(String value) {
            addCriterion("inputvalue <>", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueGreaterThan(String value) {
            addCriterion("inputvalue >", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueGreaterThanOrEqualTo(String value) {
            addCriterion("inputvalue >=", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueLessThan(String value) {
            addCriterion("inputvalue <", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueLessThanOrEqualTo(String value) {
            addCriterion("inputvalue <=", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueLike(String value) {
            addCriterion("inputvalue like", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueNotLike(String value) {
            addCriterion("inputvalue not like", value, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueIn(List<String> values) {
            addCriterion("inputvalue in", values, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueNotIn(List<String> values) {
            addCriterion("inputvalue not in", values, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueBetween(String value1, String value2) {
            addCriterion("inputvalue between", value1, value2, "inputvalue");
            return (Criteria) this;
        }

        public Criteria andInputvalueNotBetween(String value1, String value2) {
            addCriterion("inputvalue not between", value1, value2, "inputvalue");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productattributes
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 26 14:56:27 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productattributes
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}