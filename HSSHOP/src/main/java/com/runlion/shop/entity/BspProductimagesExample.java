package com.runlion.shop.entity;

import java.util.ArrayList;
import java.util.List;

public class BspProductimagesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public BspProductimagesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPimgidIsNull() {
            addCriterion("pimgid is null");
            return (Criteria) this;
        }

        public Criteria andPimgidIsNotNull() {
            addCriterion("pimgid is not null");
            return (Criteria) this;
        }

        public Criteria andPimgidEqualTo(Integer value) {
            addCriterion("pimgid =", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidNotEqualTo(Integer value) {
            addCriterion("pimgid <>", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidGreaterThan(Integer value) {
            addCriterion("pimgid >", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pimgid >=", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidLessThan(Integer value) {
            addCriterion("pimgid <", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidLessThanOrEqualTo(Integer value) {
            addCriterion("pimgid <=", value, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidIn(List<Integer> values) {
            addCriterion("pimgid in", values, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidNotIn(List<Integer> values) {
            addCriterion("pimgid not in", values, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidBetween(Integer value1, Integer value2) {
            addCriterion("pimgid between", value1, value2, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPimgidNotBetween(Integer value1, Integer value2) {
            addCriterion("pimgid not between", value1, value2, "pimgid");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andShowimgIsNull() {
            addCriterion("showimg is null");
            return (Criteria) this;
        }

        public Criteria andShowimgIsNotNull() {
            addCriterion("showimg is not null");
            return (Criteria) this;
        }

        public Criteria andShowimgEqualTo(String value) {
            addCriterion("showimg =", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgNotEqualTo(String value) {
            addCriterion("showimg <>", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgGreaterThan(String value) {
            addCriterion("showimg >", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgGreaterThanOrEqualTo(String value) {
            addCriterion("showimg >=", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgLessThan(String value) {
            addCriterion("showimg <", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgLessThanOrEqualTo(String value) {
            addCriterion("showimg <=", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgLike(String value) {
            addCriterion("showimg like", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgNotLike(String value) {
            addCriterion("showimg not like", value, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgIn(List<String> values) {
            addCriterion("showimg in", values, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgNotIn(List<String> values) {
            addCriterion("showimg not in", values, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgBetween(String value1, String value2) {
            addCriterion("showimg between", value1, value2, "showimg");
            return (Criteria) this;
        }

        public Criteria andShowimgNotBetween(String value1, String value2) {
            addCriterion("showimg not between", value1, value2, "showimg");
            return (Criteria) this;
        }

        public Criteria andIsmainIsNull() {
            addCriterion("ismain is null");
            return (Criteria) this;
        }

        public Criteria andIsmainIsNotNull() {
            addCriterion("ismain is not null");
            return (Criteria) this;
        }

        public Criteria andIsmainEqualTo(Byte value) {
            addCriterion("ismain =", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainNotEqualTo(Byte value) {
            addCriterion("ismain <>", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainGreaterThan(Byte value) {
            addCriterion("ismain >", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainGreaterThanOrEqualTo(Byte value) {
            addCriterion("ismain >=", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainLessThan(Byte value) {
            addCriterion("ismain <", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainLessThanOrEqualTo(Byte value) {
            addCriterion("ismain <=", value, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainIn(List<Byte> values) {
            addCriterion("ismain in", values, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainNotIn(List<Byte> values) {
            addCriterion("ismain not in", values, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainBetween(Byte value1, Byte value2) {
            addCriterion("ismain between", value1, value2, "ismain");
            return (Criteria) this;
        }

        public Criteria andIsmainNotBetween(Byte value1, Byte value2) {
            addCriterion("ismain not between", value1, value2, "ismain");
            return (Criteria) this;
        }

        public Criteria andDisplayorderIsNull() {
            addCriterion("displayorder is null");
            return (Criteria) this;
        }

        public Criteria andDisplayorderIsNotNull() {
            addCriterion("displayorder is not null");
            return (Criteria) this;
        }

        public Criteria andDisplayorderEqualTo(Integer value) {
            addCriterion("displayorder =", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderNotEqualTo(Integer value) {
            addCriterion("displayorder <>", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderGreaterThan(Integer value) {
            addCriterion("displayorder >", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderGreaterThanOrEqualTo(Integer value) {
            addCriterion("displayorder >=", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderLessThan(Integer value) {
            addCriterion("displayorder <", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderLessThanOrEqualTo(Integer value) {
            addCriterion("displayorder <=", value, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderIn(List<Integer> values) {
            addCriterion("displayorder in", values, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderNotIn(List<Integer> values) {
            addCriterion("displayorder not in", values, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderBetween(Integer value1, Integer value2) {
            addCriterion("displayorder between", value1, value2, "displayorder");
            return (Criteria) this;
        }

        public Criteria andDisplayorderNotBetween(Integer value1, Integer value2) {
            addCriterion("displayorder not between", value1, value2, "displayorder");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productimages
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 26 14:56:27 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_productimages
     *
     * @mbggenerated Fri Jun 26 14:56:27 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}