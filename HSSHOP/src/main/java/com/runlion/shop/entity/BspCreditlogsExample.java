package com.runlion.shop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BspCreditlogsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public BspCreditlogsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogidIsNull() {
            addCriterion("logid is null");
            return (Criteria) this;
        }

        public Criteria andLogidIsNotNull() {
            addCriterion("logid is not null");
            return (Criteria) this;
        }

        public Criteria andLogidEqualTo(Integer value) {
            addCriterion("logid =", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidNotEqualTo(Integer value) {
            addCriterion("logid <>", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidGreaterThan(Integer value) {
            addCriterion("logid >", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidGreaterThanOrEqualTo(Integer value) {
            addCriterion("logid >=", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidLessThan(Integer value) {
            addCriterion("logid <", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidLessThanOrEqualTo(Integer value) {
            addCriterion("logid <=", value, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidIn(List<Integer> values) {
            addCriterion("logid in", values, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidNotIn(List<Integer> values) {
            addCriterion("logid not in", values, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidBetween(Integer value1, Integer value2) {
            addCriterion("logid between", value1, value2, "logid");
            return (Criteria) this;
        }

        public Criteria andLogidNotBetween(Integer value1, Integer value2) {
            addCriterion("logid not between", value1, value2, "logid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andPaycreditsIsNull() {
            addCriterion("paycredits is null");
            return (Criteria) this;
        }

        public Criteria andPaycreditsIsNotNull() {
            addCriterion("paycredits is not null");
            return (Criteria) this;
        }

        public Criteria andPaycreditsEqualTo(Integer value) {
            addCriterion("paycredits =", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsNotEqualTo(Integer value) {
            addCriterion("paycredits <>", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsGreaterThan(Integer value) {
            addCriterion("paycredits >", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsGreaterThanOrEqualTo(Integer value) {
            addCriterion("paycredits >=", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsLessThan(Integer value) {
            addCriterion("paycredits <", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsLessThanOrEqualTo(Integer value) {
            addCriterion("paycredits <=", value, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsIn(List<Integer> values) {
            addCriterion("paycredits in", values, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsNotIn(List<Integer> values) {
            addCriterion("paycredits not in", values, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsBetween(Integer value1, Integer value2) {
            addCriterion("paycredits between", value1, value2, "paycredits");
            return (Criteria) this;
        }

        public Criteria andPaycreditsNotBetween(Integer value1, Integer value2) {
            addCriterion("paycredits not between", value1, value2, "paycredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsIsNull() {
            addCriterion("rankcredits is null");
            return (Criteria) this;
        }

        public Criteria andRankcreditsIsNotNull() {
            addCriterion("rankcredits is not null");
            return (Criteria) this;
        }

        public Criteria andRankcreditsEqualTo(Integer value) {
            addCriterion("rankcredits =", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsNotEqualTo(Integer value) {
            addCriterion("rankcredits <>", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsGreaterThan(Integer value) {
            addCriterion("rankcredits >", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsGreaterThanOrEqualTo(Integer value) {
            addCriterion("rankcredits >=", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsLessThan(Integer value) {
            addCriterion("rankcredits <", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsLessThanOrEqualTo(Integer value) {
            addCriterion("rankcredits <=", value, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsIn(List<Integer> values) {
            addCriterion("rankcredits in", values, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsNotIn(List<Integer> values) {
            addCriterion("rankcredits not in", values, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsBetween(Integer value1, Integer value2) {
            addCriterion("rankcredits between", value1, value2, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andRankcreditsNotBetween(Integer value1, Integer value2) {
            addCriterion("rankcredits not between", value1, value2, "rankcredits");
            return (Criteria) this;
        }

        public Criteria andActionIsNull() {
            addCriterion("action is null");
            return (Criteria) this;
        }

        public Criteria andActionIsNotNull() {
            addCriterion("action is not null");
            return (Criteria) this;
        }

        public Criteria andActionEqualTo(Byte value) {
            addCriterion("action =", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotEqualTo(Byte value) {
            addCriterion("action <>", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThan(Byte value) {
            addCriterion("action >", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionGreaterThanOrEqualTo(Byte value) {
            addCriterion("action >=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThan(Byte value) {
            addCriterion("action <", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionLessThanOrEqualTo(Byte value) {
            addCriterion("action <=", value, "action");
            return (Criteria) this;
        }

        public Criteria andActionIn(List<Byte> values) {
            addCriterion("action in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotIn(List<Byte> values) {
            addCriterion("action not in", values, "action");
            return (Criteria) this;
        }

        public Criteria andActionBetween(Byte value1, Byte value2) {
            addCriterion("action between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andActionNotBetween(Byte value1, Byte value2) {
            addCriterion("action not between", value1, value2, "action");
            return (Criteria) this;
        }

        public Criteria andActioncodeIsNull() {
            addCriterion("actioncode is null");
            return (Criteria) this;
        }

        public Criteria andActioncodeIsNotNull() {
            addCriterion("actioncode is not null");
            return (Criteria) this;
        }

        public Criteria andActioncodeEqualTo(Integer value) {
            addCriterion("actioncode =", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeNotEqualTo(Integer value) {
            addCriterion("actioncode <>", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeGreaterThan(Integer value) {
            addCriterion("actioncode >", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("actioncode >=", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeLessThan(Integer value) {
            addCriterion("actioncode <", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeLessThanOrEqualTo(Integer value) {
            addCriterion("actioncode <=", value, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeIn(List<Integer> values) {
            addCriterion("actioncode in", values, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeNotIn(List<Integer> values) {
            addCriterion("actioncode not in", values, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeBetween(Integer value1, Integer value2) {
            addCriterion("actioncode between", value1, value2, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActioncodeNotBetween(Integer value1, Integer value2) {
            addCriterion("actioncode not between", value1, value2, "actioncode");
            return (Criteria) this;
        }

        public Criteria andActiontimeIsNull() {
            addCriterion("actiontime is null");
            return (Criteria) this;
        }

        public Criteria andActiontimeIsNotNull() {
            addCriterion("actiontime is not null");
            return (Criteria) this;
        }

        public Criteria andActiontimeEqualTo(Date value) {
            addCriterion("actiontime =", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeNotEqualTo(Date value) {
            addCriterion("actiontime <>", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeGreaterThan(Date value) {
            addCriterion("actiontime >", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeGreaterThanOrEqualTo(Date value) {
            addCriterion("actiontime >=", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeLessThan(Date value) {
            addCriterion("actiontime <", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeLessThanOrEqualTo(Date value) {
            addCriterion("actiontime <=", value, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeIn(List<Date> values) {
            addCriterion("actiontime in", values, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeNotIn(List<Date> values) {
            addCriterion("actiontime not in", values, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeBetween(Date value1, Date value2) {
            addCriterion("actiontime between", value1, value2, "actiontime");
            return (Criteria) this;
        }

        public Criteria andActiontimeNotBetween(Date value1, Date value2) {
            addCriterion("actiontime not between", value1, value2, "actiontime");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("operator is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("operator is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorEqualTo(Integer value) {
            addCriterion("operator =", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotEqualTo(Integer value) {
            addCriterion("operator <>", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThan(Integer value) {
            addCriterion("operator >", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator >=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThan(Integer value) {
            addCriterion("operator <", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Integer value) {
            addCriterion("operator <=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorIn(List<Integer> values) {
            addCriterion("operator in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotIn(List<Integer> values) {
            addCriterion("operator not in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorBetween(Integer value1, Integer value2) {
            addCriterion("operator between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotBetween(Integer value1, Integer value2) {
            addCriterion("operator not between", value1, value2, "operator");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 02 09:43:54 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bsp_creditlogs
     *
     * @mbggenerated Thu Jul 02 09:43:54 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}