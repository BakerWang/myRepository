package com.runlion.shop.entity;

import java.util.ArrayList;
import java.util.List;

public class BspMailverificationExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public BspMailverificationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andMidIsNull() {
			addCriterion("mid is null");
			return (Criteria) this;
		}

		public Criteria andMidIsNotNull() {
			addCriterion("mid is not null");
			return (Criteria) this;
		}

		public Criteria andMidEqualTo(Integer value) {
			addCriterion("mid =", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotEqualTo(Integer value) {
			addCriterion("mid <>", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThan(Integer value) {
			addCriterion("mid >", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThanOrEqualTo(Integer value) {
			addCriterion("mid >=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThan(Integer value) {
			addCriterion("mid <", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThanOrEqualTo(Integer value) {
			addCriterion("mid <=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidIn(List<Integer> values) {
			addCriterion("mid in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotIn(List<Integer> values) {
			addCriterion("mid not in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidBetween(Integer value1, Integer value2) {
			addCriterion("mid between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotBetween(Integer value1, Integer value2) {
			addCriterion("mid not between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("email like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("email not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andVerificationIsNull() {
			addCriterion("verification is null");
			return (Criteria) this;
		}

		public Criteria andVerificationIsNotNull() {
			addCriterion("verification is not null");
			return (Criteria) this;
		}

		public Criteria andVerificationEqualTo(String value) {
			addCriterion("verification =", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationNotEqualTo(String value) {
			addCriterion("verification <>", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationGreaterThan(String value) {
			addCriterion("verification >", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationGreaterThanOrEqualTo(String value) {
			addCriterion("verification >=", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationLessThan(String value) {
			addCriterion("verification <", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationLessThanOrEqualTo(String value) {
			addCriterion("verification <=", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationLike(String value) {
			addCriterion("verification like", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationNotLike(String value) {
			addCriterion("verification not like", value, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationIn(List<String> values) {
			addCriterion("verification in", values, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationNotIn(List<String> values) {
			addCriterion("verification not in", values, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationBetween(String value1, String value2) {
			addCriterion("verification between", value1, value2, "verification");
			return (Criteria) this;
		}

		public Criteria andVerificationNotBetween(String value1, String value2) {
			addCriterion("verification not between", value1, value2,
					"verification");
			return (Criteria) this;
		}

		public Criteria andIdentIsNull() {
			addCriterion("ident is null");
			return (Criteria) this;
		}

		public Criteria andIdentIsNotNull() {
			addCriterion("ident is not null");
			return (Criteria) this;
		}

		public Criteria andIdentEqualTo(Integer value) {
			addCriterion("ident =", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentNotEqualTo(Integer value) {
			addCriterion("ident <>", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentGreaterThan(Integer value) {
			addCriterion("ident >", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentGreaterThanOrEqualTo(Integer value) {
			addCriterion("ident >=", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentLessThan(Integer value) {
			addCriterion("ident <", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentLessThanOrEqualTo(Integer value) {
			addCriterion("ident <=", value, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentIn(List<Integer> values) {
			addCriterion("ident in", values, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentNotIn(List<Integer> values) {
			addCriterion("ident not in", values, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentBetween(Integer value1, Integer value2) {
			addCriterion("ident between", value1, value2, "ident");
			return (Criteria) this;
		}

		public Criteria andIdentNotBetween(Integer value1, Integer value2) {
			addCriterion("ident not between", value1, value2, "ident");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated do_not_delete_during_merge Wed Jul 15 09:07:00 CST 2015
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table bsp_mailverification
	 *
	 * @mbggenerated Wed Jul 15 09:07:00 CST 2015
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}