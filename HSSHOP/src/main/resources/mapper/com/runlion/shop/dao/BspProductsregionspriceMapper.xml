<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.runlion.shop.dao.BspProductsregionspriceMapper">
	<resultMap id="BaseResultMap"
		type="com.runlion.shop.entity.BspProductsregionsprice">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="productregionsId" jdbcType="INTEGER" property="productregionsid" />
		<result column="type" jdbcType="CHAR" property="type" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<result column="priceType" jdbcType="CHAR" property="pricetype" />
		<result column="buyminquan" jdbcType="DOUBLE" property="buyminquan" />
		<result column="modelType" jdbcType="INTEGER" property="modeltype" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		id, productregionsId, type, price, priceType, buyminquan, modelType
	</sql>
	
	<delete id="deleteProductsRegionsHasPid" parameterType="java.lang.String">
		delete from bsp_productsregions where productId>0 and Id in 
		(select productregionsId  FROM `bsp_productsregionsprice` bp where bp.id in(#{IDS}));
	</delete>
	
	<select id="getProductRegionPrice" parameterType="map"
		resultType="java.util.HashMap">
		select distinct
		t.productregionsId,t2.regionsName,t.priceType,t2.RegionsId
		,t3.pid,t3.name pname,t.price,t.id id,t.buyminquan
		from
		bsp_productsregionsprice t
		left join
		bsp_productsregions t2 on
		t.productregionsId = t2.Id
		left join
		bsp_products t3 on t2.productId =
		t3.pid
		left join bsp_regions t4 on t4.regionid=t2.RegionsId
		where
		t.priceType =
		#{PRICE_TYPE}
		<!-- 全部产品价格 -->
		<if test="TYPE == 1 ">
		</if>
		<!-- pid>0的产品价格 -->
		<if test="TYPE == 2 ">
			and t2.productId > 0
		</if>
		<!-- pid<0的产品价格 -->
		<if test="TYPE == 3 ">
			and t2.productId = -1
		</if>
		<!-- pid=特定值的产品价格 -->
		<if test="TYPE == 4 ">
			<if test="PRODUCT_ID != -1 ">
				and t2.productid = #{PRODUCT_ID}
			</if>
			<if test="PRODUCT_REGIONSID != -1 ">
				and t2.id = #{PRODUCT_REGIONSID}
			</if>
		</if>
		<if test="REGIONS_ID != null and REGIONS_ID != -1">
			and (t4.provinceid = #{REGIONS_ID} 
			     or t4.cityid= #{REGIONS_ID}
			     or t4.countyid= #{REGIONS_ID}
			     or t4.streetid= #{REGIONS_ID}
			     or t4.regionid= #{REGIONS_ID})		    
		</if>
		<if test="PRODUCT_NAME != null">
				and t3.name like CONCAT('%','${PRODUCT_NAME}','%' )
			</if> 
		<if test="REGIONS_ID == -1">
			and t4.regionid >0
		</if>
		order by t2.regionsName asc
		limit
		${START_NUM},${LIMIT_NUM}
	</select>


	<select id="getProductRegionPriceCount" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select distinct
		t.productregionsId,t2.regionsName,t.priceType,t2.RegionsId
		,t3.pid,t3.name pname,t.price,t.id id,t.buyminquan
		from
		bsp_productsregionsprice t
		left join
		bsp_productsregions t2 on
		t.productregionsId = t2.Id
		left join
		bsp_products t3 on t2.productId =
		t3.pid
		left join bsp_regions t4 on t4.regionid=t2.RegionsId
		where
		t.priceType
		=#{PRICE_TYPE}
		<!-- 全部产品价格 -->
		<if test="TYPE == 1 ">
		</if>
		<!-- pid>0的产品价格 -->
		<if test="TYPE == 2 ">
			and t2.productId > 0
		</if>
		<!-- pid<0的产品价格 -->
		<if test="TYPE == 3 ">
			and t2.productId = -1
		</if>
		<!-- pid=特定值的产品价格 -->
		<if test="TYPE == 4 ">
			<if test="PRODUCT_ID != -1 ">
				and t2.productid = #{PRODUCT_ID}
			</if>
			<if test="PRODUCT_REGIONSID != -1 ">
				and t2.id = #{PRODUCT_REGIONSID}
			</if>
		</if>
		<if test="REGIONS_ID != null and REGIONS_ID != -1">
			and (t4.provinceid = #{REGIONS_ID} 
			     or t4.cityid= #{REGIONS_ID}
			     or t4.countyid= #{REGIONS_ID}
			     or t4.streetid= #{REGIONS_ID}
			     or t4.regionid= #{REGIONS_ID})
		</if>
		<if test="PRODUCT_NAME != null">
			and t3.name like CONCAT('%','${PRODUCT_NAME}','%' )
		</if>  
		<if test="REGIONS_ID == -1">
			and t4.regionid >0
		</if>
		) a
	</select>





	<select id="selectByExample"
		parameterType="com.runlion.shop.entity.BspProductsregionspriceExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bsp_productsregionsprice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		select
		<include refid="Base_Column_List" />
		from bsp_productsregionsprice
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		delete from bsp_productsregionsprice
		where id = #{id,jdbcType=INTEGER}
	</delete>


	<!-- // 根据产品id获取价格 -->
	<select id="selectPriceByProductId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select * from bsp_productsregionsprice
		where priceType = #{priceType,jdbcType=INTEGER}
		and productregionsId in (
		SELECT id FROM bsp_productsregions where productId = #{pid,jdbcType=INTEGER}
		)
	</select>
	
	<!-- // 根据产品id批量删除价格 -->
	<delete id="deletePriceByProductId" parameterType="java.lang.Integer">
		delete from bsp_productsregionsprice
		where priceType = #{priceType,jdbcType=INTEGER}
		and productregionsId in (
		SELECT id FROM bsp_productsregions where productId = #{pid,jdbcType=INTEGER}
		)
	</delete>


	<delete id="deleteByExample"
		parameterType="com.runlion.shop.entity.BspProductsregionspriceExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		delete from bsp_productsregionsprice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.runlion.shop.entity.BspProductsregionsprice">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		insert into bsp_productsregionsprice (id, productregionsId, type,
		price, priceType, buyminquan,
		modelType)
		values (#{id,jdbcType=INTEGER},
		#{productregionsid,jdbcType=INTEGER},
		#{type,jdbcType=CHAR},
		#{price,jdbcType=DECIMAL}, #{pricetype,jdbcType=CHAR},
		#{buyminquan,jdbcType=DOUBLE},
		#{modeltype,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.runlion.shop.entity.BspProductsregionsprice">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		insert into bsp_productsregionsprice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="productregionsid != null">
				productregionsId,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="pricetype != null">
				priceType,
			</if>
			<if test="buyminquan != null">
				buyminquan,
			</if>
			<if test="modeltype != null">
				modelType,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="productregionsid != null">
				#{productregionsid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="pricetype != null">
				#{pricetype,jdbcType=CHAR},
			</if>
			<if test="buyminquan != null">
				#{buyminquan,jdbcType=DOUBLE},
			</if>
			<if test="modeltype != null">
				#{modeltype,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.runlion.shop.entity.BspProductsregionspriceExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		select count(*) from bsp_productsregionsprice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		update bsp_productsregionsprice
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.productregionsid != null">
				productregionsId =
				#{record.productregionsid,jdbcType=INTEGER},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=CHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DECIMAL},
			</if>
			<if test="record.pricetype != null">
				priceType = #{record.pricetype,jdbcType=CHAR},
			</if>
			<if test="record.buyminquan != null">
				buyminquan = #{record.buyminquan,jdbcType=DOUBLE},
			</if>
			<if test="record.modeltype != null">
				modelType = #{record.modeltype,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		update bsp_productsregionsprice
		set id = #{record.id,jdbcType=INTEGER},
		productregionsId = #{record.productregionsid,jdbcType=INTEGER},
		type =
		#{record.type,jdbcType=CHAR},
		price = #{record.price,jdbcType=DECIMAL},
		priceType = #{record.pricetype,jdbcType=CHAR},
		buyminquan =
		#{record.buyminquan,jdbcType=DOUBLE},
		modelType =
		#{record.modeltype,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.runlion.shop.entity.BspProductsregionsprice">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		update bsp_productsregionsprice
		<set>
			<if test="productregionsid != null">
				productregionsId = #{productregionsid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=CHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="pricetype != null">
				priceType = #{pricetype,jdbcType=CHAR},
			</if>
			<if test="buyminquan != null">
				buyminquan = #{buyminquan,jdbcType=DOUBLE},
			</if>
			<if test="modeltype != null">
				modelType = #{modeltype,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.runlion.shop.entity.BspProductsregionsprice">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 08 
			10:31:37 CST 2015. -->
		update bsp_productsregionsprice
		set productregionsId =
		#{productregionsid,jdbcType=INTEGER},
		type = #{type,jdbcType=CHAR},
		price = #{price,jdbcType=DECIMAL},
		priceType =
		#{pricetype,jdbcType=CHAR},
		buyminquan = #{buyminquan,jdbcType=DOUBLE},
		modelType = #{modeltype,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<!-- 产品的区域价格 -->
	<select id="getProductsregionsPrice" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT a.* FROM bsp_productsregionsprice a,
		bsp_productsregions b
		where
		a.productregionsId = b.Id and
		b.productId =
		#{productId,jdbcType=INTEGER}
		and b.regionsId =
		#{regionsId,jdbcType=INTEGER}
	</select>

	<!-- 区域运费 -->
	<select id="getRegionsTransPrice" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT a.* FROM bsp_productsregionsprice a,
		bsp_productsregions b
		where
		a.productregionsId = b.Id
		and a.priceType = 2
		<![CDATA[ and b.productId <=0]]>
		and b.regionsId = #{regionsId,jdbcType=INTEGER}
	</select>

	<!-- 区域装卸费 -->
	<select id="getRegionsLoadPrice" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT a.* FROM bsp_productsregionsprice a,
		bsp_productsregions b
		where
		a.productregionsId = b.Id
		and a.priceType = 3
		<![CDATA[ and b.productId <=0]]>
		and b.regionsId = #{regionsId,jdbcType=INTEGER}
	</select>

	<delete id="deleteByRefRegionsPid" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jul 02 
			10:49:04 CST 2015. -->
		delete from bsp_productsregionsprice
		where productregionsId in (select
		t.Id from bsp_productsregions t where
		t.productId=#{id,jdbcType=INTEGER})
	</delete>
</mapper>