<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.runlion.shop.dao.BspAreaManagerMapper">

	<resultMap id="BspSaleaddressRSMap" type="com.runlion.shop.entity.BspSaleaddress">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jul 02 
			14:52:31 CST 2015. -->
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="contacts" jdbcType="VARCHAR" property="contacts" />
		<result column="workTime" jdbcType="VARCHAR" property="worktime" />
		<result column="type" jdbcType="CHAR" property="type" />
		<!-- content 是blob字段，可能包含图片，暂时以字符串形式展示 -->
		<result column="content_str" jdbcType="VARCHAR" property="content_str" />
		<result column="placeid" jdbcType="INTEGER" property="placeid" />
		<result column="pkcorp" jdbcType="VARCHAR" property="pkcorp" />
		<result column="regionid" jdbcType="INTEGER" property="regionid" />
		<result column="regionname" jdbcType="VARCHAR" property="regionname" />
	</resultMap>

	<select id="existsProductRegions" parameterType="map"
		resultType="java.lang.Integer">
		select count(1)
		from bsp_productsregions a,
		bsp_productsregionsprice b
		where
		a.productId
		= #{PRODUCT_ID}
		and
		a.RegionsId = #{REGIONS_ID}
		and a.id = b.productregionsId
		and
		b.priceType = 1

	</select>

	<!--取品牌和产地的对应关系， 没有对应的modal 和 接口，暂时用map -->
	<select id="getProductsregionsbrandplace" resultType="java.util.HashMap"
		parameterType="java.lang.Integer">
		SELECT a.* FROM bsp_productsregionsbrandplace a,
		bsp_productsregions b
		where
		a.brandId = #{brandId,jdbcType=INTEGER}
		and
		a.productregionsId = b.id
		and b.RegionsId =
		#{regionsId,jdbcType=INTEGER}
	</select>

	<!--获取表中某个pkcorp值的个数 -->
	<select id="getNcPkcorpCount" parameterType="map" resultType="java.lang.Integer">
		select count(*) from
		bsp_saleaddress where pkcorp=#{pkcorp}
		<if test="sealId != null">
			and id &lt;&gt; #{sealId}
		</if>		
	</select>



	<delete id="deleteProductRegionsBrandPlace" parameterType="map">
		delete from bsp_productsregionsbrandplace where id = #{ID}
	</delete>

	<insert id="insertProductRegionsBrandPlace" parameterType="map">
		insert into bsp_productsregionsbrandplace(brandId, productregionsId,
		placeId)
		values(#{BRAND_ID}, #{PRODUCT_REGIONS_ID}, #{PLACE_ID})
	</insert>


	<select id="getProductRegionsId" parameterType="map"
		resultType="java.lang.Integer">
		select id
		from
		bsp_productsregions
		where productId =
		#{PRODUCT_ID}
		and RegionsId =
		#{REGIONS_ID}
		limit 1
	</select>

	<select id="hasProductRegionsBrand" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from bsp_productsregionsbrand t1,
		bsp_productsregions t2
		where t1.productregionsId = t2.Id
		and t1.brandid
		= #{BRAND_ID}
		and t2.RegionsId = #{REGIONS_ID}
	</select>

	<select id="hasProductRegionsBrandWithId" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from bsp_productsregionsbrand t1,
		bsp_productsregions t2
		where t1.productregionsId = t2.Id
		and t1.id !=
		#{ID}
		and t1.brandid = #{BRAND_ID}
		and t2.RegionsId = #{REGIONS_ID}
	</select>

	<select id="selBrandPlaceById" parameterType="map" resultType="java.util.HashMap">
		select *
		from bsp_productsregionsbrandplace
		where id=#{ID}
	</select>


	<update id="upProductRegionsBrandById" parameterType="map">
		update
		bsp_productsregionsbrand
		set brandid=#{BRAND_ID},
		productregionsId=#{REGIONS_ID}
		where id=#{ID}
	</update>

	<select id="selProRegionsBrand" parameterType="map"
		resultType="java.util.HashMap">
		select * from bsp_productsregionsbrand where
		id=#{PROD_REGIONS_BRABDID}
	</select>

	<select id="hasProductRegionsBrandPlace" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from bsp_productsregionsbrandplace t1
		<if test="REGIONS_ID != -1">
			, bsp_productsregions t2
		</if>
		where
		<if test="REGIONS_ID != -1">
			t1.productregionsId = t2.Id
		</if>
		<if test="REGIONS_ID == -1">
			t1.productregionsId = -1
		</if>
		<if test="BRAND_ID != -1">
			and t1.brandId = #{BRAND_ID}
		</if>
		<if test="BRAND_ID == -1">
			and t1.brandId = -1
		</if>
		<if test="REGIONS_ID != -1">
			and t2.RegionsId = #{REGIONS_ID}
		</if>
		and t1.placeId = #{PLACE_ID}
	</select>

	<select id="hasProductRegionsBrandPlaceWithId" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from bsp_productsregionsbrandplace t1
		<if test="REGIONS_ID != -1">
			, bsp_productsregions t2
		</if>
		where
		<if test="REGIONS_ID != -1">
			t1.productregionsId = t2.Id
		</if>
		<if test="REGIONS_ID == -1">
			t1.productregionsId = -1
		</if>
		<if test="BRAND_ID != -1">
			and t1.brandId = #{BRAND_ID}
		</if>
		<if test="BRAND_ID == -1">
			and t1.brandId = -1
		</if>
		<if test="REGIONS_ID != -1">
			and t2.RegionsId = #{REGIONS_ID}
		</if>
		and t1.placeId = #{PLACE_ID}
		and t1.id != #{ID}
	</select>


	<update id="upProductRegionsBrandPlace" parameterType="map">
		update
		bsp_productsregionsbrandplace
		set brandId=#{BRAND_ID},
		productregionsId=#{PRODUCT_REGIONS_ID},
		placeId=#{PLACE_ID}
		where
		id=#{ID}
	</update>

	<select id="selectBrandByRegionsid" parameterType="map"
		resultType="java.util.HashMap">
		select t1.id,t1.brandId,t2.attrvalue
		brandName,t1.productregionsId , t3.RegionsId,t3.regionsName
		from
		bsp_productsregionsbrand t1 ,(select attrvalueid,attrvalue from
		bsp_attributevalues where attrid=#{ATTR_ID}) t2,bsp_productsregions t3
		where t1.brandId = t2.attrvalueid
		and t1.productregionsId = t3.Id
		and
		t3.RegionsId = #{REGIONS_ID}
	</select>

	<select id="countProductRegionsBrandPlace" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select
		t1.id,t1.productregionsid,t2.RegionsId,t2.regionsName,t1.brandid
		,t3.attrvalue brandName,t4.attrvalueid,t4.attrvalue
		from
		bsp_productsregionsbrandplace t1 left join bsp_productsregions t2 on
		t1.productregionsid = t2.Id
		left join (select attrvalueid,attrvalue
		from bsp_attributevalues where
		attrid=52) t3 on t1.brandid =
		t3.attrvalueid
		left join (select attrvalueid,attrvalue from
		bsp_attributevalues where
		attrid=51) t4 on t1.placeid = t4.attrvalueid
		where 1=1
		<if test="REGIONS_ID !=null and REGIONS_ID !=-1">
			and t2.RegionsId = ${REGIONS_ID}
		</if>
		) a
	</select>

	<select id="countProductBrandPlace" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select
		t1.id,t1.productregionsid,t1.brandid,t3.attrvalue
		brandName,t4.attrvalueid,t4.attrvalue
		from
		bsp_productsregionsbrandplace t1
		left join (select
		attrvalueid,attrvalue from bsp_attributevalues where
		attrid=52) t3 on
		t1.brandid = t3.attrvalueid
		left join (select
		attrvalueid,attrvalue from
		bsp_attributevalues where
		attrid=51) t4 on
		t1.placeid = t4.attrvalueid
		where 1=1 and t1.productregionsid=-1
		) a
	</select>

	<select id="countSealaddProRegionRef" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select
		*
		from
		bsp_productsregionssaleaddress t1
		where t1.saleaddressId=${SALE_ADD_ID}
		and t1.productregionsId=${PRO_REGION_ID}
		) a
	</select>
	<update id="cleanSealaddProregRef" parameterType="map">
		delete from
		bsp_productsregionssaleaddress
		where saleaddressId=${SALE_ADD_ID}
	</update>



	<select id="getSaleAddressRegions" parameterType="map"
		resultType="java.util.HashMap">
		select
		t1.productregionsId
		from
		bsp_productsregionssaleaddress t1
		where t1.saleaddressId=${SALE_ADD_ID}
	</select>

	<select id="countProductRegionsPlace" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt from bsp_productsregionsbrandplace a
		where exists
		(select 1 from bsp_productsregions b where b.id =
		a.productregionsId
		<if test="REGIONS_ID !=-1">
			and b.RegionsId = ${REGIONS_ID}
		</if>
		)
	</select>

	<select id="selectProductRegionsBrandPlace" parameterType="map"
		resultType="java.util.HashMap">
		select
		t1.id,t1.productregionsid,t2.RegionsId,t2.regionsName,t1.brandid
		,t3.attrvalue brandName,t4.attrvalueid,t4.attrvalue
		from
		bsp_productsregionsbrandplace t1 left join bsp_productsregions t2 on
		t1.productregionsid = t2.Id
		left join (select attrvalueid,attrvalue
		from bsp_attributevalues where attrid=52) t3 on t1.brandid =
		t3.attrvalueid
		left join (select attrvalueid,attrvalue from
		bsp_attributevalues where attrid=51) t4 on t1.placeid = t4.attrvalueid
		<if test="REGIONS_ID !=-1">
			where t2.RegionsId = ${REGIONS_ID}
		</if>
		order by t1.id desc
		limit ${START_NUM},${LIMIT_NUM}
	</select>

	<select id="getBrandPlace" parameterType="map" resultType="java.util.HashMap">
		SELECT distinct a.brandId, b.attrvalue brandname, a.placeId,
		c.attrvalue placename FROM hsshop_dev.bsp_productsregionsbrandplace a,
		bsp_attributevalues b, bsp_attributevalues c
		where a.brandId =
		b.attrvalueId
		and a.placeId = c.attrvalueId
		<if test="BRAND_ID !=-1">
			and a.brandId = ${BRAND_ID}
		</if>
		<if test="PLACE_ID !=-1">
			and a.placeId = ${PLACE_ID}
		</if>
		order by a.brandId
		limit ${START_NUM},${LIMIT_NUM}
	</select>

	<select id="countBrandPlace" parameterType="map" resultType="java.lang.Integer">

		select count(1) from (
		SELECT distinct a.brandId, b.attrvalue
		brandname, a.placeId, c.attrvalue
		placename FROM
		hsshop_dev.bsp_productsregionsbrandplace a,
		bsp_attributevalues b,
		bsp_attributevalues c
		where a.brandId = b.attrvalueId
		and a.placeId =
		c.attrvalueId
		<if test="BRAND_ID !=-1">
			and a.brandId = ${BRAND_ID}
		</if>
		<if test="PLACE_ID !=-1">
			and a.placeId = ${PLACE_ID}
		</if>
		order by a.brandId) x
	</select>



	<select id="selectProductRegionsPlace" parameterType="map"
		resultType="java.util.HashMap">
		select
		t1.id,t1.productregionsid,t2.RegionsId,t2.regionsName,t1.brandid
		,t4.attrvalueid,t4.attrvalue
		from
		bsp_productsregionsbrandplace t1 left
		join bsp_productsregions t2 on
		t1.productregionsid = t2.Id
		left join
		(select attrvalueid,attrvalue from
		bsp_attributevalues where attrid=51)
		t4 on t1.placeid = t4.attrvalueid
		where 1=1 and t1.brandid = -1
		order by
		t1.id desc
		limit ${START_NUM},${LIMIT_NUM}
	</select>

	<select id="selectProductBrandPlace" parameterType="map"
		resultType="java.util.HashMap">
		select
		t1.id,t1.productregionsid,t1.brandid
		,t3.attrvalue
		brandName,t4.attrvalueid,t4.attrvalue
		from
		bsp_productsregionsbrandplace t1
		left join (select
		attrvalueid,attrvalue
		from bsp_attributevalues where
		attrid=52) t3 on
		t1.brandid =
		t3.attrvalueid
		left join (select
		attrvalueid,attrvalue from
		bsp_attributevalues where attrid=51) t4 on
		t1.placeid = t4.attrvalueid
		where 1=1 and t1.productregionsid = -1
		order by t1.id desc
		limit
		${START_NUM},${LIMIT_NUM}
	</select>

	<delete id="deleteProductRegionsBrand" parameterType="map">
		delete from
		bsp_productsregionsbrand where id = #{ID}
	</delete>



	<insert id="insertProductRegionsBrand" parameterType="map">
		insert into
		bsp_productsregionsbrand(brandId, productregionsId)
		values(#{BRAND_ID}, #{PRODUCT_REGIONS_ID})
	</insert>

	<select id="selectAttrListById" parameterType="map"
		resultType="java.util.HashMap">
		select * from bsp_attributevalues t
		where
		t.attrid=#{ATTR_ID}
	</select>

	<select id="countProductRegionsBrand" parameterType="map"
		resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select
		t1.id,t1.productregionsid,t2.RegionsId,t2.regionsName,t1.brandid,t3.attrvalueid
		,t3.attrvalue
		from bsp_productsregionsbrand t1 left join
		bsp_productsregions t2 on
		t1.productregionsid = t2.Id
		left join (select
		* from bsp_attributevalues where attrid=52) t3 on
		t1.brandid =
		t3.attrvalueid
		left join bsp_regions t4 on t2.RegionsId=t4.regionid
		where 1=1
		<if test="REGIONS_ID !=null and REGIONS_ID !=-1">
			and (t4.provinceid = #{REGIONS_ID}
			or t4.cityid= #{REGIONS_ID}
			or t4.countyid= #{REGIONS_ID}
			or t4.streetid= #{REGIONS_ID}
			or t4.regionid= #{REGIONS_ID})
		</if>
		<if test="BRAND_ID !=null and BRAND_ID !=-1">
			and t1.brandid = ${BRAND_ID}
		</if>
		) a
	</select>

	<select id="selectProductRegionsBrand" parameterType="map"
		resultType="java.util.HashMap">
		select
		t1.id,t1.productregionsid,t2.RegionsId,t2.regionsName,t1.brandid,t3.attrvalueid
		,t3.attrvalue
		from bsp_productsregionsbrand t1 left join
		bsp_productsregions t2 on t1.productregionsid = t2.Id
		left join (select
		* from bsp_attributevalues where attrid=52) t3 on t1.brandid =
		t3.attrvalueid
		left join bsp_regions t4 on t2.RegionsId=t4.regionid
		where 1=1
		<if test="REGIONS_ID !=null and REGIONS_ID !=-1">
			and (t4.provinceid = #{REGIONS_ID}
			or t4.cityid= #{REGIONS_ID}
			or t4.countyid= #{REGIONS_ID}
			or t4.streetid= #{REGIONS_ID}
			or t4.regionid= #{REGIONS_ID})
		</if>
		<if test="BRAND_ID !=null and BRAND_ID !=-1">
			and t1.brandid = ${BRAND_ID}
		</if>
		order by t1.id desc

		limit ${START_NUM},${LIMIT_NUM}
	</select>

	<select id="selectProductRegionsByid" parameterType="map"
		resultType="java.util.HashMap">
		select t.*,r.*
		from bsp_productsregions t left join
		bsp_regions r on t.RegionsId = r.regionid
		where t.id=#{ID}
	</select>

	<update id="updateSaleaddress" parameterType="map">
		update
		bsp_saleaddress
		set address = #{ADDRESS}
		,tel = #{TEL}
		,contacts =
		#{CONTACTS}
		,worktime =
		#{WORK_TIME}
		,content = #{CONTENT}
		<if test="TYPE !=null">
			,type = #{TYPE}
		</if>
		<if test="PLACEID !=null">
		,placeid=#{PLACEID}
		</if>
		,name = #{NAME}
		<if test="PKCORP !=null">
			,pkcorp = #{PKCORP}
		</if>
		<if test="REGIONID !=null">
			,regionid = #{REGIONID}
		</if>
		<if test="REGIONNAME !=null">
			,regionname = #{REGIONNAME}
		</if>
		where id = #{ID}
	</update>

	<select id="selectSaleaddressByid" parameterType="map"
		resultType="java.util.HashMap">
		select id, address, tel, mobile, contacts,
		workTime,
		convert(content, char) content, type,placeid,
		name,pkcorp,regionid,regionname
		from bsp_saleaddress
		where id = #{ID}
	</select>

	<delete id="deleteSaleaddress" parameterType="map">
		delete from
		bsp_saleaddress where id = #{SALE_ADDRESS_ID}
	</delete>

	<select id="getSaleaddressId" parameterType="map" resultType="java.lang.Integer">
		select max(id) from bsp_saleaddress
	</select>

	<insert id="insertSaleaddress" parameterType="map">
		insert into
		bsp_saleaddress(id, address, tel, contacts, worktime, content,
		type,placeid, name,pkcorp,regionid,regionname)
		values (#{ID},
		#{ADDRESS}, #{TEL}, #{CONTACTS},
		#{WORK_TIME},
		#{CONTENT},
		#{TYPE},#{PLACEID}, #{NAME},#{NC_PKCORP}
		, #{REGIONID},#{REGIONNAME})
	</insert>

	<select id="countSaleaddress" parameterType="map" resultType="java.lang.Integer">
		select count(1) cnt
		from (
		select t2.id,
		t2.address, t2.tel,
		t2.contacts,
		t2.workTime, convert(t2.content, char)
		content, t2.type
		, t2.name
		from
		bsp_saleaddress t2
		where 1=1
		<if test="TYPE != null">
			and t2.type = ${TYPE}
		</if>

		<if test="COMPANY_NAME != null">
			and t2.name like
			CONCAT('%','${COMPANY_NAME}','%' )
		</if>
		<if test="COMPANY_ADDR != null">
			and t2.address like
			CONCAT('%','${COMPANY_ADDR}','%' )
		</if>
		<if test="COMPANY_CONT != null">
			and t2.contacts like
			CONCAT('%','${COMPANY_CONT}','%' )
		</if>
		<if test="ncNum != null">
			and t2.pkcorp like
			CONCAT('%','${ncNum}','%' )
		</if>
		) a
	</select>

	<select id="selectSaleaddressLimit" parameterType="map"
		resultType="java.util.HashMap">
		select t2.id,
		t2.address,
		t2.tel, t2.contacts, t2.workTime,
		convert(t2.content, char) content,
		t2.type,
		t2.name
		from
		bsp_saleaddress
		t2
		where 1=1
		<if test="TYPE != null">
			and t2.type = ${TYPE}
		</if>

		<if test="COMPANY_NAME != null">
			and t2.name like
			CONCAT('%','${COMPANY_NAME}','%' )
		</if>
		<if test="COMPANY_ADDR != null">
			and t2.address like
			CONCAT('%','${COMPANY_ADDR}','%' )
		</if>
		<if test="COMPANY_CONT != null">
			and t2.contacts like
			CONCAT('%','${COMPANY_CONT}','%' )
		</if>
		
		<if test="ncNum != null">
			and t2.pkcorp like
			CONCAT('%','${ncNum}','%' )
		</if>

		order by t2.id
		DESC
		limit
		${START_NUM},${LIMIT_NUM}
	</select>

	<select id="selectProductByid" parameterType="map" resultType="java.util.HashMap">
		select *
		from bsp_products
		where pid = #{PID}
	</select>

	<select id="selectUnitByid" parameterType="map" resultType="java.util.HashMap">
		select *
		from bsp_unit
		where unitid = #{UNITID}
	</select>

	<update id="updateProductsRegionsSaleaddress" parameterType="map">
		update bsp_productsregionssaleaddress
		set saleaddressid =
		#{SALE_ADDRESS_ID}
		where productregionsid = #{PRODUCT_REGIONS_ID}
	</update>

	<update id="updateProductsRegions" parameterType="map">
		update bsp_productsregions
		<set>
			productId = #{PRODUCT_ID}
			,regionsid = #{REGIONS_ID}
			,regionsname
			=#{REGIONS_NAME}
			<if test="START_HAND != null">
				,starthand=#{START_HAND}
			</if>
			<if test="START_SHIP != null">
				,startship=#{START_SHIP}
			</if>
		</set>
		where id = #{ID}
	</update>



	<select id="selectProductRegionsInfo" parameterType="map"
		resultType="java.util.HashMap">
		select
		t.id,t.productregionsId,t2.regionsName,t.type,t.price,t.priceType,t2.RegionsId,r.*
		,t3.saleaddressid ,t4.pid, t4.name pname
		from bsp_productsregionsprice
		t left join bsp_productsregions t2 on t.productregionsId = t2.Id
		left
		join bsp_regions r on t2.regionsid = r.regionid
		left join
		bsp_productsregionssaleaddress t3 on t.productregionsId =
		t3.productregionsId
		left join bsp_products t4 on t2.productId=t4.pid
		where t.productregionsId=#{PRODUCT_REGIONS_ID}
		<if test="PRICE_TYPE != null and PRICE_TYPE != '' ">
			and t.priceType=#{PRICE_TYPE}
		</if>
	</select>

	<delete id="deleteProductRegions" parameterType="map">
		delete
		from
		bsp_productsregions where id = #{PRODUCT_REGIONS_ID}
	</delete>

	<delete id="deleteProductRegionsPrice" parameterType="map">
		delete from
		bsp_productsregionsprice where
		productregionsid=#{PRODUCT_REGIONS_ID}
		<if test="PRICE_TYPE != null and PRICE_TYPE != '' ">
			and priceType=#{PRICE_TYPE}
		</if>
	</delete>

	<delete id="deleteProductRegionsPriceById" parameterType="map">
		delete
		from
		bsp_productsregionsprice where
		id=#{id}
	</delete>

	<select id="selectSaleaddress" parameterType="map" resultType="java.util.HashMap">
		select * from bsp_saleaddress order by id
	</select>

	<delete id="deleteProductsRegionsSaleAddress" parameterType="map">
		delete from bsp_productsregionssaleaddress where productregionsId =
		saleaddressid = #{SALE_ADDRESS_ID}
	</delete>



	<delete id="delSaleAddrProRegionsRef" parameterType="map">
		delete from
		bsp_productsregionssaleaddress where
		productregionsId
		=#{SALE_REGION_ID} and
		saleaddressid = #{SALE_ADDRESS_ID}
	</delete>

	<insert id="insertProductsRegionsSaleAddress" parameterType="map">
		insert into bsp_productsregionssaleaddress(saleaddressId,
		productregionsId)
		values(#{SALE_ADDRESS_ID},#{PRODUCT_REGIONS_ID})
	</insert>

	<select id="hasRegionsPlaceOfZT" parameterType="map"
		resultType="java.lang.Integer">
		select count(t1.id) cnt
		from
		bsp_saleaddress t1 left join
		bsp_productsregionssaleaddress t2 on t1.id=t2.saleaddressId
		left join
		bsp_productsregions t3 on t2.productregionsId=t3.Id
		where 1=1
		and
		t1.placeid= #{PLACE_ID}
		and t3.RegionsId = #{REGIONS_ID}
	</select>

	<select id="hasIdRegionsPlaceOfZT" parameterType="map"
		resultType="java.lang.Integer">
		select count(t1.id) cnt
		from
		bsp_saleaddress t1 left join
		bsp_productsregionssaleaddress t2 on t1.id=t2.saleaddressId
		left join
		bsp_productsregions t3 on t2.productregionsId=t3.Id
		where 1=1
		and t1.id
		!= #{ID}
		and t1.placeid= #{PLACE_ID}
		and t3.RegionsId = #{REGIONS_ID}
	</select>

	<insert id="insertProductsRegionsPrice" parameterType="map">
		insert
		into bsp_productsregionsprice(productregionsId, type, price,
		priceType)
		values(#{PRODUCT_REGIONS_ID}, #{TYPE}, #{PRICE},
		#{PRICE_TYPE})
	</insert>

	<insert id="insertProductsRegions" parameterType="map">
		insert into bsp_productsregions(id
		<if test="PRODUCT_ID != null and PRODUCT_ID != '' ">
			,productid
		</if>
		,regionsid,regionsname)
		values(#{ID}
		<if test="PRODUCT_ID != null and PRODUCT_ID != '' ">
			,#{PRODUCT_ID}
		</if>
		<if test="START_HAND != null">
			,#{START_HAND}
		</if>
		<if test="START_SHIP != null">
			,#{START_SHIP}
		</if>
		,#{REGIONS_ID},#{REGIONS_NAME})
	</insert>

	<select id="getProductRegionId" parameterType="map"
		resultType="java.lang.Integer">
		select max(id) maxid from
		bsp_productsregions
	</select>



	<!-- 获取门店或工厂地址通过区域id -->
	<select id="selSaleaddressByAreaid" resultType="com.runlion.shop.entity.BspSaleaddress">
		SELECT
		sa.*
		FROM
		bsp_saleaddress sa,
		bsp_productsregions p,
		bsp_productsregionssaleaddress l
		WHERE
		sa.id = l.saleaddressId
		AND
		l.productregionsId = p.Id
		and p.RegionsId =#{areaId,jdbcType=INTEGER}

	</select>

	<!-- 价格批量更新 -->
	<update id="priceBatchEdit" parameterType="map">
		update
		bsp_productsregionsprice set price = #{price}
		where id in(
		select
		x.id
		from (
		SELECT a.id FROM bsp_productsregionsprice a,
		bsp_productsregions
		b, bsp_regions c
		where a.productregionsId = b.id
		and
		b.RegionsId = c.regionid
		<!-- 全部产品价格 -->
		<if test="batchType == 1">
			<if test="layer == 1">
				and c.provinceid = #{REGIONS_ID}
			</if>
			<if test="layer == 2">
				and c.cityid = #{REGIONS_ID}
			</if>
			<if test="layer == 3">
				and c.countyid = #{REGIONS_ID}
			</if>
			<if test="layer == 4">
				and c.streetid = #{REGIONS_ID}
			</if>
			<if test="layer == 5">
				and c.regionid = #{REGIONS_ID}
			</if>
		</if>

		<!-- pid>0的产品价格 -->
		<if test="batchType == 2">
			and b.productId > 0
			<if test="layer == 1">
				and c.provinceid = #{REGIONS_ID}
			</if>
			<if test="layer == 2">
				and c.cityid = #{REGIONS_ID}
			</if>
			<if test="layer == 3">
				and c.countyid = #{REGIONS_ID}
			</if>
			<if test="layer == 4">
				and c.streetid = #{REGIONS_ID}
			</if>
			<if test="layer == 5">
				and c.regionid = #{REGIONS_ID}
			</if>
		</if>

		<!-- pid<0的产品价格 -->
		<if test="batchType == 3">
			and b.productId = -1
			<if test="layer == 1">
				and c.provinceid = #{REGIONS_ID}
			</if>
			<if test="layer == 2">
				and c.cityid = #{REGIONS_ID}
			</if>
			<if test="layer == 3">
				and c.countyid = #{REGIONS_ID}
			</if>
			<if test="layer == 4">
				and c.streetid = #{REGIONS_ID}
			</if>
			<if test="layer == 5">
				and c.regionid = #{REGIONS_ID}
			</if>
		</if>

		<!-- pid=特定值的产品价格 -->
		<if test="batchType == 4">
			and b.productId = #{PRODUCT_ID}
			<if test="layer == 1">
				and c.provinceid = #{REGIONS_ID}
			</if>
			<if test="layer == 2">
				and c.cityid = #{REGIONS_ID}
			</if>
			<if test="layer == 3">
				and c.countyid = #{REGIONS_ID}
			</if>
			<if test="layer == 4">
				and c.streetid = #{REGIONS_ID}
			</if>
			<if test="layer == 5">
				and c.regionid = #{REGIONS_ID}
			</if>
		</if>


		and a.priceType = 1) x)
	</update>

	<!-- 通过产品区域id获取门店id -->
	<select id="selSealidByProRegionId" resultType="java.lang.Integer">
		SELECT
		t.saleaddressId
		FROM
		bsp_productsregionssaleaddress t left join
		bsp_saleaddress s on t.saleaddressId=s.id
		WHERE
		t.productregionsId =
		#{proRegionId,jdbcType=INTEGER}
		and s.type=1
	</select>

	<!-- 通过产品区域id获取工厂id -->
	<select id="selGCSealidByProRegionId" resultType="java.lang.Integer"
		parameterType="map">
		SELECT
		t.saleaddressId
		FROM
		bsp_productsregionssaleaddress
		t,
		bsp_saleaddress s ,
		bsp_productskus sku,
		bsp_products pro
		WHERE
		t.saleaddressId=s.id
		and s.placeid=sku.attrvalueid
		and sku.pid=pro.pid
		and t.productregionsId = #{PRODUCT_REGIONS_ID}
		and
		pro.pid=#{PRODUCT_ID}
		and sku.attrid=51
		and s.type=2
	</select>


	<!-- 通过产品区域id获取品牌区域关联id -->
	<select id="selProidProRegionId" resultType="java.lang.Integer"
		parameterType="map">
		SELECT
		t.id
		FROM
		bsp_productsregionsbrand t,
		bsp_productsregions prg,
		bsp_productskus sku,
		bsp_products pro
		WHERE
		t.brandId=sku.attrvalueid
		and sku.pid=pro.pid
		and
		prg.id=t.productregionsId
		and prg.RegionsId = #{REGIONS_ID}
		and
		pro.pid=#{PRODUCT_ID}
		and (prg.productId=-1 or
		prg.productId=#{PRODUCT_ID})
		and sku.attrid=52
	</select>
	
	<!-- 通过产品id获取工厂信息 -->
	<select id="selSaleAddressByBrandid" resultMap="BspSaleaddressRSMap"
		parameterType="map">
		SELECT ba.*
		from bsp_saleaddress ba,bsp_productsregionsbrandplace bpp
		where 
		bpp.brandId=#{BRANDID}
		and ba.placeid=bpp.placeId
		limit 1		
	</select>


</mapper>